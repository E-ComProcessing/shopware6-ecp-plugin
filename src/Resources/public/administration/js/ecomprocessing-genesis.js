(function(){var e={670:function(){},34:function(e,t,n){var s=n(670);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.id,s,""]]),s.locals&&(e.exports=s.locals),n(346).Z("ccae753c",s,!0,{})},346:function(e,t,n){"use strict";function s(e,t){for(var n=[],s={},i=0;i<t.length;i++){var a=t[i],o=a[0],c={id:e+":"+i,css:a[1],media:a[2],sourceMap:a[3]};s[o]?s[o].parts.push(c):n.push(s[o]={id:o,parts:[c]})}return n}n.d(t,{Z:function(){return g}});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var a={},o=i&&(document.head||document.getElementsByTagName("head")[0]),c=null,r=0,d=!1,p=function(){},l=null,u="data-vue-ssr-id",m="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function g(e,t,n,i){d=n,l=i||{};var o=s(e,t);return h(o),function(t){for(var n=[],i=0;i<o.length;i++){var c=a[o[i].id];c.refs--,n.push(c)}t?h(o=s(e,t)):o=[];for(var i=0;i<n.length;i++){var c=n[i];if(0===c.refs){for(var r=0;r<c.parts.length;r++)c.parts[r]();delete a[c.id]}}}}function h(e){for(var t=0;t<e.length;t++){var n=e[t],s=a[n.id];if(s){s.refs++;for(var i=0;i<s.parts.length;i++)s.parts[i](n.parts[i]);for(;i<n.parts.length;i++)s.parts.push(y(n.parts[i]));s.parts.length>n.parts.length&&(s.parts.length=n.parts.length)}else{for(var o=[],i=0;i<n.parts.length;i++)o.push(y(n.parts[i]));a[n.id]={id:n.id,refs:1,parts:o}}}}function f(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function y(e){var t,n,s=document.querySelector("style["+u+'~="'+e.id+'"]');if(s){if(d)return p;s.parentNode.removeChild(s)}if(m){var i=r++;t=w.bind(null,s=c||(c=f()),i,!1),n=w.bind(null,s,i,!0)}else t=_.bind(null,s=f()),n=function(){s.parentNode.removeChild(s)};return t(e),function(s){s?(s.css!==e.css||s.media!==e.media||s.sourceMap!==e.sourceMap)&&t(e=s):n()}}var v=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function w(e,t,n,s){var i=n?"":s.css;if(e.styleSheet)e.styleSheet.cssText=v(t,i);else{var a=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function _(e,t){var n=t.css,s=t.media,i=t.sourceMap;if(s&&e.setAttribute("media",s),l.ssrId&&e.setAttribute(u,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(s){var i=t[s];if(void 0!==i)return i.exports;var a=t[s]={id:s,exports:{}};return e[s](a,a.exports,n),a.exports}n.d=function(e,t){for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="bundles/ecomprocessinggenesis/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/ecomprocessinggenesis/"),function(){"use strict";let e=Shopware.Classes.ApiService;var t=class extends e{constructor(e,t,n="ecomprocessing-v1"){super(e,t,n)}getPaymentReferenceDetails(t,n){let s=`${this.getApiBasePath()}/genesis/transaction/payment-reference-details`;return this.httpClient.post(s,{orderId:t,uniqueId:n},this.getDefaultOptions()).then(t=>e.handleResponse(t))}doCapture(t,n){let s=`${this.getApiBasePath("","_action")}/genesis/transaction/capture`;return this.httpClient.post(s,{orderId:t,uniqueId:n},this.getDefaultOptions()).then(t=>e.handleResponse(t))}doRefund(t,n){let s=`${this.getApiBasePath("","_action")}/genesis/transaction/refund`;return this.httpClient.post(s,{orderId:t,uniqueId:n},this.getDefaultOptions()).then(t=>e.handleResponse(t))}doVoid(t,n){let s=`${this.getApiBasePath("","_action")}/genesis/transaction/void`;return this.httpClient.post(s,{orderId:t,uniqueId:n},this.getDefaultOptions()).then(t=>e.handleResponse(t))}getDefaultOptions(){return{headers:this.getBasicHeaders(),version:Shopware.Context.api.apiVersion}}};let{Application:s}=Shopware,i=s.getContainer("init");s.addServiceProvider("EcomprocessingGenesisTransaction",e=>new t(i.httpClient,e.loginService));let a=Shopware.Classes.ApiService;var o=class extends a{constructor(e,t,n="ecomprocessing-v1"){super(e,t,n)}convertAmountToExponent(e,t){let n=`${this.getApiBasePath()}/genesis/utils/convert-amount-exponent/${e}/${t}`;return this.httpClient.get(n,this.getDefaultOptions()).then(e=>a.handleResponse(e))}getDefaultOptions(){return{headers:this.getBasicHeaders(),version:Shopware.Context.api.apiVersion}}};let{Application:c}=Shopware,r=c.getContainer("init");c.addServiceProvider("EcomprocessingGenesisUtils",e=>new o(r.httpClient,e.loginService));let d=Shopware.Data.Criteria;Shopware.Component.override("sw-order-detail",{template:"{% block sw_order_detail_content_tabs_general %}\n\n    {% parent %}\n\n    <sw-tabs-item v-if=\"isEcomprocessingPayment\"\n                  :route=\"{ name: 'sw.order.ecomprocessing-genesis-transaction-details', params: { id: $route.params.id } }\"\n                  :title=\"$tc('ecomprocessing-genesis-transactions.tab-title')\">\n        {{ $tc('ecomprocessing-genesis-transactions.tab-title') }}\n    </sw-tabs-item>\n\n{% endblock %}\n",data(){return{isEcomprocessingPayment:!1}},watch:{orderId:{deep:!0,handler(){if(!this.orderId)return;let e=this.repositoryFactory.create("order"),t=new d(1,1);t.addAssociation("transactions"),t.getAssociation("transactions").addSorting(d.sort("createdAt")),e.get(this.orderId,Shopware.Context.api,t).then(e=>{let t=e.transactions.length,n=t-1;if(t<=0||!e.transactions[n].paymentMethodId)return;let s=e.transactions[n].paymentMethodId;null!=s&&this.setIsEcomprocessingPayment(s)})},immediate:!0}},methods:{setIsEcomprocessingPayment(e){this.repositoryFactory.create("payment_method").get(e,Shopware.Context.api).then(e=>{this.isEcomprocessingPayment="handler_ecomprocessing_checkoutpayment"===e.formattedHandlerIdentifier})}}});let p=Shopware.Data.Criteria,{Component:l,Mixin:u,Filter:m}=Shopware;Shopware.Component.register("sw-order-ecomprocessing-genesis-transaction-details",{inject:["repositoryFactory","EcomprocessingGenesisUtils"],mixins:[u.getByName("notification")],template:'{% block ecomprocessing_genesis_order_card %}\n    <div>\n        {% block ecomprocessing_genesis_payment_card %}\n            <sw-card :title="$tc(\'ecomprocessing-genesis-transactions.payment-card.title\')">\n                <sw-card-section>\n                    <sw-container columns="1fr">\n                        <h3>{{ $tc(\'ecomprocessing-genesis-transactions.payment-card.title\') }}</h3>\n                        <sw-description-list>\n                            <dt>{{ $tc(\'ecomprocessing-genesis-transactions.payment-card.transaction_id\') }}</dt>\n                            <dd>{{ paymentData.transaction_id }}</dd>\n\n                            <dt>{{ $tc(\'ecomprocessing-genesis-transactions.payment-card.unique_id\') }}</dt>\n                            <dd>{{ paymentData.unique_id }}</dd>\n\n                            <dt>{{ $tc(\'ecomprocessing-genesis-transactions.payment-card.amount\') }}</dt>\n                            <dd>{{ paymentData.amount }}</dd>\n\n                            <dt>{{ $tc(\'ecomprocessing-genesis-transactions.payment-card.currency\') }}</dt>\n                            <dd>{{ paymentData.currency }}</dd>\n\n                            <dt>{{ $tc(\'ecomprocessing-genesis-transactions.payment-card.mode\') }}</dt>\n                            <dd>{{ paymentData.mode }}</dd>\n\n                            <dt>{{ $tc(\'ecomprocessing-genesis-transactions.payment-card.created_at\') }}</dt>\n                            <dd>{{ paymentData.created_at }}</dd>\n                        </sw-description-list>\n                    </sw-container>\n                </sw-card-section>\n\n                <sw-loader v-if="isPaymentLoading"></sw-loader>\n            </sw-card>\n        {% endblock %}\n\n        {% block ecomprocessing_genesis_transaction_card %}\n            <ecomprocessing-genesis-transaction-section v-if="!isPaymentLoading"\n                                                      :paymentData="paymentData"\n                                                      @reload-event="reloadData">\n            </ecomprocessing-genesis-transaction-section>\n        {% endblock %}\n\n        {% block ecomprocessing_genesis_history_card %}\n            <sw-card :title="$tc(\'ecomprocessing-genesis-transactions.payment-history.title\')">\n                <template #grid>\n                    <sw-data-grid :dataSource="transactionHistory"\n                                  :columns="transactionColumns"\n                                  :showActions="false"\n                                  :showSelection="false">\n                    </sw-data-grid>\n                </template>\n\n                <sw-loader v-if="isHistoryLoading"></sw-loader>\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n',data(){return{paymentData:{},transactions:{},transactionHistory:[],amount:null,isPaymentLoading:!0,isHistoryLoading:!0}},computed:{transactionRepository(){return this.repositoryFactory.create("ecomprocessing_genesis_payment_entity")},transactionCriteria(){return new p(1,100).addFilter(p.equals("order_id",this.$route.params.id)).addSorting(p.sort("created_at","ASC"))},transactionColumns(){return[{property:"unique_id",label:this.$tc("ecomprocessing-genesis-transactions.payment-history.unique_id"),rawData:!0},{property:"reference_id",label:this.$tc("ecomprocessing-genesis-transactions.payment-history.reference_id"),rawData:!0},{property:"status",label:this.$tc("ecomprocessing-genesis-transactions.payment-history.status"),rawData:!0},{property:"transaction_type",label:this.$tc("ecomprocessing-genesis-transactions.payment-history.transaction_type"),rawData:!0},{property:"mode",label:this.$tc("ecomprocessing-genesis-transactions.payment-history.mode"),rawData:!0},{property:"amount",label:this.$tc("ecomprocessing-genesis-transactions.payment-history.amount"),rawData:!0},{property:"currency",label:this.$tc("ecomprocessing-genesis-transactions.payment-history.currency"),rawData:!0},{property:"created_at",label:this.$tc("ecomprocessing-genesis-transactions.payment-history.updated_at"),rawData:!0}]},dateFilter(){return m.getByName("date")}},created(){this.buildData()},metaInfo(){return{title:this.$tc("ecomprocessing-genesis-transactions.tab-title")}},methods:{buildData:function(){this.resetData(),this.getPaymentData().then(e=>{if(e.length<=0){this.showErrorMessage(this.$tc("ecomprocessing-genesis-transactions.notifications.errors.payment-not-found"));return}this.paymentData={transaction_id:e[0].transaction_id,unique_id:e[0].unique_id,amount:e[0].amount,currency:e[0].currency,mode:e[0].mode,created_at:this.formatDate(e[0].created_at)},e.forEach(e=>{this.transactionHistory.push({unique_id:e.unique_id,reference_id:e.reference_id,status:e.status,transaction_type:e.transaction_type,mode:e.mode,amount:e.amount,currency:e.currency,created_at:this.formatDate(e.created_at),updated_at:this.formatDate(e.updated_at)})}),this.convertAmountToExponent(this.paymentData.amount,this.paymentData.currency).then(e=>{this.paymentData.amount=e.amount,this.transactionHistory.forEach(t=>{t.amount=e.amount}),this.isPaymentLoading=!1,this.isHistoryLoading=!1})})},showSuccessMessage:function(e){this.createNotificationSuccess({title:this.$tc("ecomprocessing-genesis-transactions.notifications.success-title"),message:e})},showErrorMessage:function(e){this.createNotificationError({title:this.$tc("ecomprocessing-genesis-transactions.notifications.error-title"),message:e})},formatDate(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit"})},convertAmountToExponent:function(e,t){return this.EcomprocessingGenesisUtils.convertAmountToExponent(e,t).then(e=>e)},getPaymentData:function(){return this.transactionRepository.search(this.transactionCriteria,Shopware.Context.api).then(e=>e)},resetData:function(){this.paymentData={},this.transactions={},this.transactionHistory=[],this.amount=null,this.isHistoryLoading=!0},reloadData(){this.buildData()}}}),Shopware.Component.register("ecomprocessing-genesis-transaction-section",{inject:["EcomprocessingGenesisTransaction"],template:"<sw-card :title=\"$tc('ecomprocessing-genesis-transactions.payment-transaction.title')\">\n\n    {% block ecomprocessing_genesis_transaction_actions_container %}\n        <ecomprocessing-genesis-transaction-actions :v-if=\"actionTransaction\"\n                                                  :isVoidAvailable=\"canVoid\"\n                                                  :isCaptureAvailable=\"canCapture\"\n                                                  :isRefundAvailable=\"canRefund\"\n                                                  :actionTransaction=\"actionTransaction\"\n                                                  @reference-action-event=\"executedReferenceAction\">\n        </ecomprocessing-genesis-transaction-actions>\n    {% endblock %}\n\n    {% block ecomprocessing_genesis_transaction_states_card %}\n        <sw-card-section divider=\"top\" v-if=\"initialTransaction\">\n            <sw-container columns=\"1fr\" gap=\"0px 30px\">\n\n                {% block ecomprocessing_genesis_transaction_initial_container %}\n                    <h3>\n                        {{ $tc('ecomprocessing-genesis-transactions.payment-transaction.initial-title') }} - {{ initialTransaction.transaction_type }}\n                    </h3>\n                    <sw-description-list>\n                        <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-history.unique_id') }}</dt>\n                        <dd>{{ initialTransaction.unique_id }}</dd>\n\n                        <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-history.reference_id') }}</dt>\n                        <dd>{{ initialTransaction.reference_id }}</dd>\n\n                        <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-transaction.amount') }}</dt>\n                        <dd>{{ initialTransaction.amount }}</dd>\n\n                        <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-transaction.status') }}</dt>\n                        <dd>{{ initialTransaction.status }}</dd>\n                    </sw-description-list>\n                {% endblock %}\n\n                {% block ecomprocessing_genesis_transaction_capture_container %}\n                    <div v-if=\"captureTransaction\">\n                        <h3>\n                            {{ $tc('ecomprocessing-genesis-transactions.payment-transaction.capture-title') }} - {{ captureTransaction.transaction_type }}\n                        </h3>\n                        <sw-description-list>\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-history.unique_id') }}</dt>\n                            <dd>{{ captureTransaction.unique_id }}</dd>\n\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-history.reference_id') }}</dt>\n                            <dd>{{ captureTransaction.reference_id }}</dd>\n\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-transaction.amount') }}</dt>\n                            <dd>{{ captureTransaction.amount }} {{ captureTransaction.currency }}</dd>\n\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-transaction.status') }}</dt>\n                            <dd>{{ captureTransaction.status }}</dd>\n                        </sw-description-list>\n                    </div>\n                {% endblock %}\n\n                {% block ecomprocessing_genesis_transaction_refund_container %}\n                    <div v-if=\"refundTransaction\">\n                        <h3>\n                            {{ $tc('ecomprocessing-genesis-transactions.payment-transaction.refund-title') }} - {{ refundTransaction.transaction_type }}\n                        </h3>\n                        <sw-description-list>\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-history.unique_id') }}</dt>\n                            <dd>{{ refundTransaction.unique_id }}</dd>\n\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-history.reference_id') }}</dt>\n                            <dd>{{ refundTransaction.reference_id }}</dd>\n\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-transaction.amount') }}</dt>\n                            <dd>{{ refundTransaction.amount }} {{ refundTransaction.currency }}</dd>\n\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-transaction.status') }}</dt>\n                            <dd>{{ refundTransaction.status }}</dd>\n                        </sw-description-list>\n                    </div>\n                {% endblock %}\n\n                {% block ecomprocessing_genesis_transaction_void_container %}\n                    <div v-if=\"voidTransaction\">\n                        <h3>\n                            {{ $tc('ecomprocessing-genesis-transactions.payment-transaction.void-title') }} - {{ voidTransaction.transaction_type }}\n                        </h3>\n                        <sw-description-list>\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-history.unique_id') }}</dt>\n                            <dd>{{ voidTransaction.unique_id }}</dd>\n\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-history.reference_id') }}</dt>\n                            <dd>{{ voidTransaction.reference_id }}</dd>\n\n                            <dt>{{ $tc('ecomprocessing-genesis-transactions.payment-transaction.status') }}</dt>\n                            <dd>{{ voidTransaction.status }}</dd>\n                        </sw-description-list>\n                    </div>\n                {% endblock %}\n            </sw-container>\n        </sw-card-section>\n    {% endblock %}\n\n    {% block ecomprocessing_genesis_missing_initial_transaction %}\n    <sw-card-section v-if=\"!initialTransaction\">\n        <sw-container>\n            <h2>\n                <sw-icon name=\"default-communication-speech-bubble\" color=\"#1abc9c\"></sw-icon>\n                {{ $tc('ecomprocessing-genesis-transactions.payment-transaction.missing-approved') }}\n            </h2>\n            <p>{{ $tc('ecomprocessing-genesis-transactions.payment-transaction.missing-approved-description') }}</p>\n        </sw-container>\n    </sw-card-section>\n    {% endblock %}\n\n    <sw-loader v-if=\"isTransactionLoading\"></sw-loader>\n</sw-card>\n",props:{paymentData:Object},data(){return{canVoid:!1,canCapture:!1,canRefund:!1,isTransactionLoading:!0,actionTransaction:null,initialTransaction:null,captureTransaction:null,refundTransaction:null,voidTransaction:null}},created(){this.buildData()},methods:{buildData:function(){this.resetData(),this.EcomprocessingGenesisTransaction.getPaymentReferenceDetails(this.$route.params.id,this.paymentData.unique_id).then(e=>{this.canVoid=e.canVoid,this.canCapture=e.canCapture,this.canRefund=e.canRefund,this.actionTransaction=e.actionTransaction,this.initialTransaction=0===e.initialTransaction.length?null:e.initialTransaction,this.actionUniqueId=e.actionUniqueId,this.refundTransaction=0===e.refundTransaction.length?null:e.refundTransaction,this.captureTransaction=0===e.captureTransaction.length?null:e.captureTransaction,this.voidTransaction=0===e.voidTransaction.length?null:e.voidTransaction,this.isTransactionLoading=!1})},resetData:function(){this.canVoid=!1,this.canCapture=!1,this.canRefund=!1,this.isTransactionLoading=!0,this.actionTransaction=null,this.initialTransaction=null,this.captureTransaction=null,this.refundTransaction=null,this.voidTransaction=null},executedReferenceAction:function(){this.buildData(),this.$emit("reload-event")}}});let g="pending_async",h="approved",f="declined";Shopware.Component.register("ecomprocessing-genesis-transaction-action-capture",{template:'<sw-modal variant="small"\n          :title="$tc(\'ecomprocessing-genesis-transactions.transaction-actions.capture\')"\n          @modal-close="closeModal">\n\n    <p>{{ modalMessage }}</p>\n\n    <template #modal-footer>\n\n        <sw-button @click="closeModal">\n            {{ $tc(\'ecomprocessing-genesis-transactions.transaction-actions.cancel\') }}\n        </sw-button>\n\n        <sw-button variant="primary"\n                   @click="capturePayment">\n            {{ $tc(\'ecomprocessing-genesis-transactions.transaction-actions.capture\') }}\n        </sw-button>\n\n    </template>\n\n    <sw-loader v-if="isLoading" size="43px">\n    </sw-loader>\n</sw-modal>\n',inject:["EcomprocessingGenesisTransaction"],mixins:["notification"],props:{actionTransaction:{type:Object,required:!0}},computed:{modalMessage:function(){let e=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.descriptions.capture");return(e=(e=e.replace("%amount%",this.actionTransaction.amount)).replace("%currency%",this.actionTransaction.currency)).replace("%transaction_type%",this.actionTransaction.transaction_type)}},data(){return{isLoading:!1}},methods:{capturePayment(){this.isLoading=!0,this.EcomprocessingGenesisTransaction.doCapture(this.$route.id,this.actionTransaction.unique_id).then(e=>{"success"===e.status&&this.parseResponse(e.response),"error"===e.status&&this.createNotificationError({title:this.$tc("ecomprocessing-genesis-transactions.notifications.error-title"),message:this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.capture-failure")+"</br>"+e.message}),this.isLoading=!1,this.closeModal(),this.$emit("executed-capture-event")})},parseResponse(e){e.status===h&&this.createNotificationSuccess({title:this.getSuccessfulResponseTitle(e),message:this.getSuccessfulResponseMessage(e)}),e.status!==h&&this.createNotificationInfo({title:this.getSuccessfulResponseTitle(e),message:this.getSuccessfulResponseMessage(e)})},getSuccessfulResponseTitle(e){let t=this.$tc("ecomprocessing-genesis-transactions.notifications.success-title");return e.hasOwnProperty("status")&&e.status===h||(t=this.$tc("ecomprocessing-genesis-transactions.notifications.error-title")),t},getSuccessfulResponseMessage(e){let t="";switch(e.status){case h:t=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.capture-success")+` ${e.amount} ${e.currency}`+"</br>"+(e.message?e.message:"");break;case f:t=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.capture-decline")+"</br>"+(e.message?e.message:"")}return t},closeModal(){this.$emit("modal-close")}}}),n(34),Shopware.Component.register("ecomprocessing-genesis-transaction-action-refund",{template:'<sw-modal variant="small"\n          :title="$tc(\'ecomprocessing-genesis-transactions.transaction-actions.refund\')"\n          @modal-close="closeModal">\n\n    <p>{{ modalMessage }}</p>\n\n    <template #modal-footer>\n\n        <sw-button @click="closeModal">\n            {{ $tc(\'ecomprocessing-genesis-transactions.transaction-actions.cancel\') }}\n        </sw-button>\n\n        <sw-button variant="primary"\n                   @click="refundPayment">\n            {{ $tc(\'ecomprocessing-genesis-transactions.transaction-actions.refund\') }}\n        </sw-button>\n\n    </template>\n\n    <sw-loader v-if="isLoading" size="43px">\n    </sw-loader>\n</sw-modal>\n',inject:["EcomprocessingGenesisTransaction"],mixins:["notification"],props:{actionTransaction:{type:Object,required:!0}},computed:{modalMessage:function(){let e=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.descriptions.refund");return(e=(e=e.replace("%amount%",this.actionTransaction.amount)).replace("%currency%",this.actionTransaction.currency)).replace("%transaction_type%",this.actionTransaction.transaction_type)}},data(){return{isLoading:!1}},methods:{refundPayment(){this.isLoading=!0,this.EcomprocessingGenesisTransaction.doRefund(this.$route.id,this.actionTransaction.unique_id).then(e=>{"success"===e.status&&this.parseResponse(e.response),"error"===e.status&&this.createNotificationError({title:this.$tc("ecomprocessing-genesis-transactions.notifications.error-title"),message:this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.refund-failure")+"</br>"+e.message}),this.isLoading=!1,this.closeModal(),this.$emit("executed-refund-event")})},parseResponse(e){e.status===h&&this.createNotificationSuccess({title:this.getSuccessfulResponseTitle(e),message:this.getSuccessfulResponseMessage(e)}),e.status!==h&&this.createNotificationInfo({title:this.getSuccessfulResponseTitle(e),message:this.getSuccessfulResponseMessage(e)})},getSuccessfulResponseTitle(e){let t="";switch(e.status){case h:case g:t=this.$tc("ecomprocessing-genesis-transactions.notifications.success-title");break;default:t=this.$tc("ecomprocessing-genesis-transactions.notifications.error-title")}return t},getSuccessfulResponseMessage(e){let t="";switch(e.status){case g:t=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.refund-pending")+` ${e.amount} ${e.currency}`+"</br>"+(e.message?e.message:"");break;case h:t=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.refund-success")+` ${e.amount} ${e.currency}`+"</br>"+(e.message?e.message:"");break;case f:t=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.refund-decline")+"</br>"+(e.message?e.message:"")}return t},closeModal(){this.$emit("modal-close")}}}),Shopware.Component.register("ecomprocessing-genesis-transaction-action-void",{template:'<sw-modal variant="small"\n          :title="$tc(\'ecomprocessing-genesis-transactions.transaction-actions.void\')"\n          @modal-close="closeModal">\n\n    <p>{{ modalMessage }}</p>\n\n    <template #modal-footer>\n\n        <sw-button @click="closeModal">\n            {{ $tc(\'ecomprocessing-genesis-transactions.transaction-actions.cancel\') }}\n        </sw-button>\n\n        <sw-button variant="primary"\n                   @click="voidPayment">\n            {{ $tc(\'ecomprocessing-genesis-transactions.transaction-actions.void\') }}\n        </sw-button>\n\n    </template>\n\n    <sw-loader v-if="isLoading" size="43px">\n    </sw-loader>\n</sw-modal>\n',inject:["EcomprocessingGenesisTransaction"],mixins:["notification"],props:{actionTransaction:{type:Object,required:!0}},data(){return{isLoading:!1}},computed:{modalMessage:function(){let e=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.descriptions.void");return(e=(e=e.replace("%amount%",this.actionTransaction.amount)).replace("%currency%",this.actionTransaction.currency)).replace("%transaction_type%",this.actionTransaction.transaction_type)}},methods:{voidPayment(){this.isLoading=!0,this.EcomprocessingGenesisTransaction.doVoid(this.$route.id,this.actionTransaction.unique_id).then(e=>{"success"===e.status&&this.parseResponse(e.response),"error"===e.status&&this.createNotificationError({title:this.$tc("ecomprocessing-genesis-transactions.notifications.error-title"),message:this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.void-failure")+"</br>"+e.message}),this.isLoading=!1,this.closeModal(),this.$emit("executed-void-event")})},parseResponse(e){e.status===h&&this.createNotificationSuccess({title:this.getSuccessfulResponseTitle(e),message:this.getSuccessfulResponseMessage(e)}),e.status!==h&&this.createNotificationInfo({title:this.getSuccessfulResponseTitle(e),message:this.getSuccessfulResponseMessage(e)})},getSuccessfulResponseTitle(e){let t=this.$tc("ecomprocessing-genesis-transactions.notifications.success-title");return e.hasOwnProperty("status")&&e.status===h||(t=this.$tc("ecomprocessing-genesis-transactions.notifications.error-title")),t},getSuccessfulResponseMessage(e){let t="";switch(e.status){case h:t=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.void-success")+"</br>"+(e.message?e.message:"");break;case f:t=this.$tc("ecomprocessing-genesis-transactions.transaction-actions.messages.void-decline")+"</br>"+(e.message?e.message:"")}return t},closeModal(){this.$emit("modal-close")}}}),Shopware.Component.register("ecomprocessing-genesis-transaction-actions",{template:'<div>\n    {% block ecomprocessing_genesis_transaction_actions_buttons_container %}\n    <sw-card-section secondary slim>\n        <sw-button size="small"\n                   :disabled="!isVoidAvailable"\n                   @click="showModal(\'void\')">\n            {{ $tc(\'ecomprocessing-genesis-transactions.header-actions.void\') }}\n        </sw-button>\n        <sw-button size="small"\n                   :disabled="!isCaptureAvailable"\n                   @click="showModal(\'capture\')">\n            {{ $tc(\'ecomprocessing-genesis-transactions.header-actions.capture\') }}\n        </sw-button>\n        <sw-button size="small"\n                   :disabled="!isRefundAvailable"\n                   @click="showModal(\'refund\')">\n            {{ $tc(\'ecomprocessing-genesis-transactions.header-actions.refund\') }}\n        </sw-button>\n    </sw-card-section>\n\n    <ecomprocessing-genesis-transaction-action-refund\n            v-if="modalType === \'refund\'"\n            :actionTransaction="actionTransaction"\n            @modal-close="closeModal"\n            @executed-refund-event="referenceAction">\n    </ecomprocessing-genesis-transaction-action-refund>\n    <ecomprocessing-genesis-transaction-action-capture\n            v-if="modalType === \'capture\'"\n            :actionTransaction="actionTransaction"\n            @modal-close="closeModal"\n            @executed-capture-event="referenceAction">\n    </ecomprocessing-genesis-transaction-action-capture>\n    <ecomprocessing-genesis-transaction-action-void\n            v-if="modalType === \'void\'"\n            :actionTransaction="actionTransaction"\n            @modal-close="closeModal"\n            @executed-void-event="referenceAction">\n    </ecomprocessing-genesis-transaction-action-void>\n    {% endblock %}\n</div>\n',data(){return{modalType:""}},props:{isVoidAvailable:{type:Boolean,required:!0},isCaptureAvailable:{type:Boolean,required:!0},isRefundAvailable:{type:Boolean,required:!0},actionTransaction:{type:Object,required:!0}},methods:{showModal(e){this.modalType=e},closeModal(){this.modalType=""},referenceAction(){this.$emit("reference-action-event")}}}),Shopware.Module.register("sw-tab-ecomprocessing-genesis-transaction-details",{routeMiddleware(e,t){"sw.order.detail"===t.name&&t.children.push({name:"sw.order.ecomprocessing-genesis-transaction-details",path:"/sw/order/ecomprocessing-genesis-transaction/detail/:id",isChildren:!0,component:"sw-order-ecomprocessing-genesis-transaction-details",meta:{parentPath:"sw.order.index"}}),e(t)}})}()})();